package io.github.pages;

import io.github.dto.MovieDTO;
import io.github.pages.*;
import io.github.pages.mainPage.Drawer;
import io.github.pages.mainPage.DrawerController;
import io.github.pages.mainPage.DrawerItem;
import io.github.pages.mainPage.EventDrawer;
import io.github.pages.mainPage.test.Header;
import io.github.pages.table.TableCustom;
import io.github.service.MovieService;
import io.github.service.impl.MovieServiceImpl;

import java.awt.Color;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class MainPage extends JFrame {

    private DrawerController drawer;

    public MainPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        drawerShow();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        button1 = new io.github.pages.button.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new TableCustom();
        textField1 = new io.github.pages.textField.TextField();
        button2 = new io.github.pages.button.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));
        setUndecorated(true);

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 0, 0));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(760, 460));

        button1.setText(">>>");
        button1.setFocusPainted(false);
        button1.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Disponibilidade"
            }
        ));

        jScrollPane1.setViewportView(jTable1);

        textField1.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        textField1.setLabelText("Buscar por Nome");

        button2.setText("Buscar");
        button2.setFocusPainted(false);
        button2.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if(drawer.isShow()) {
            drawer.hide();
        } else {
            drawer.show();
        }
    }//GEN-LAST:event_button1ActionPerformed

    private String getValue(MovieDTO movieDTO) {
        if (movieDTO.isAvailable()) return "Disponível";
        else return "Indisponível no momento";
    }

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            var result = service.getAllLikeName(textField1.getText());
            for (MovieDTO entity: result) {
                model.addRow(new Object[]{entity.getId(), entity.getName(), getValue(entity)});
            }
            jTable1.autoRowHeight(jTable1);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_button2ActionPerformed



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    public void drawerShow() {
        drawer = Drawer.newDrawer(this)
                .background(new Color(90, 90, 90))
                .closeOnPress(true)
                .backgroundTransparent(0.3f)
                .leftDrawer(true)
                .enableScroll(true)
                .enableScrollUI(false)
                .headerHeight(160)
                .header(new Header())
                .space(3)
                .addChild(new DrawerItem("Cadastrar Filme ").icon(new ImageIcon(getClass().getResource("/logo1.png"))).build())
                .addChild(new DrawerItem("Cadastrar Cliente").icon(new ImageIcon(getClass().getResource("/client.png"))).build())
                .addChild(new DrawerItem("Cadastrar Funcionário").icon(new ImageIcon(getClass().getResource("/client.png"))).build())
                .addChild(new DrawerItem("Editar Filme").icon(new ImageIcon(getClass().getResource("/logo1.png"))).build())
                .addChild(new DrawerItem("Editar Cliente").icon(new ImageIcon(getClass().getResource("/client.png"))).build())
                .addChild(new DrawerItem("Editar Funcionário").icon(new ImageIcon(getClass().getResource("/client.png"))).build())
                .addChild(new DrawerItem("Aluguel").icon(new ImageIcon(getClass().getResource("/retn.png"))).build())
                .addFooter(new DrawerItem("Sair").icon(new ImageIcon(getClass().getResource("/exit.png"))).build())
                .event(new EventDrawer() {
                    @Override
                    public void selected(int index, DrawerItem item) {
                        switch (index) {
                            case 0 -> movieRegisterPage();
                            case 1 -> clientRegisterPage();
                            case 2 -> employeeRegisterPage();
                            case 3 -> movieEditPage();
                            case 4 -> clientEditPage();
                            case 5 -> employeeEditPage();
                            case 6 -> loanPage();
                            case 7 -> System.exit(NORMAL);
                        }
                    }
                })
                .build();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private io.github.pages.button.Button button1;
    private io.github.pages.button.Button button2;
    private javax.swing.JScrollPane jScrollPane1;
    private TableCustom jTable1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private io.github.pages.textField.TextField textField1;
    // End of variables declaration//GEN-END:variables
    private void movieRegisterPage() {
        MovieRegisterPage movieRegisterPage = new MovieRegisterPage();
        movieRegisterPage.setVisible(true);
        this.setVisible(false);
    }

    private void clientRegisterPage() {
        ClientRegisterPage clientRegisterPage = new ClientRegisterPage();
        clientRegisterPage.setVisible(true);
        this.setVisible(false);
    }

    private void employeeRegisterPage() {
        CreateEmployeePage createEmployeePage = new CreateEmployeePage();
        createEmployeePage.setVisible(true);
        this.setVisible(false);
    }

    private void movieEditPage() {
        MovieEditPage movieEditPage = new MovieEditPage();
        movieEditPage.setVisible(true);
        this.setVisible(false);
    }

    private void clientEditPage() {
        EditClientPage editClientPage = new EditClientPage();
        editClientPage.setVisible(true);
        this.setVisible(false);
    }

    private void employeeEditPage() {
        EditEmployeePage employeePage = new EditEmployeePage();
        employeePage.setVisible(true);
        this.setVisible(false);
    }
    private void loanPage() {
        CreateLoanPage createLoanPage = new CreateLoanPage();
        createLoanPage.setVisible(true);
        this.setVisible(false);
    }

    private final MovieService service = new MovieServiceImpl();
}
