/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package io.github.pages;

import io.github.entities.Movie;
import io.github.enums.Genre;
import io.github.enums.Rating;
import io.github.service.MovieService;
import io.github.service.impl.MovieServiceImpl;
import org.postgresql.util.PSQLException;

import javax.swing.*;

/**
 *
 * @author dougl
 */
public class MovieEditPage extends javax.swing.JFrame {

    /**
     * Creates new form MovieEditPage
     */
    public MovieEditPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel3 = new keeptoo.KGradientPanel();
        jLabelCadastrarFilme2 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDiretor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxGenero = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxRating = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldDuracao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldDescricao = new javax.swing.JTextField();
        jFormattedTextFieldDataLancamento = new javax.swing.JFormattedTextField();
        jButtonSair = new javax.swing.JButton();
        jButtonDeletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));
        setUndecorated(true);
        setResizable(false);

        kGradientPanel3.setkEndColor(new java.awt.Color(153, 153, 255));
        kGradientPanel3.setkStartColor(new java.awt.Color(0, 204, 204));
        kGradientPanel3.setPreferredSize(new java.awt.Dimension(760, 460));

        jLabelCadastrarFilme2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabelCadastrarFilme2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clapperboard.png"))); // NOI18N
        jLabelCadastrarFilme2.setText("Editar Filme");

        jButtonSave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonSave.setText("Salvar");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonCancel.setText("Cancelar");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Id Filme:");

        jTextFieldId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jButtonEdit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonEdit.setText("Editar");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Nome:");

        jTextFieldNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldNome.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldNome.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Diretor:");
        jLabel1.setToolTipText("");

        jTextFieldDiretor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldDiretor.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldDiretor.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Data de Lançamento:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Genero:");

        jComboBoxGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTION", "DRAMA", "SCIENCE_FICTION", "HORROR", "COMEDY" }));
        jComboBoxGenero.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Classificação:");

        jComboBoxRating.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G", "PG", "PG13", "R", "NC17" }));
        jComboBoxRating.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Duração:");

        jTextFieldDuracao.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldDuracao.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldDuracao.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Descrição:");

        jTextFieldDescricao.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldDescricao.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldDescricao.setEnabled(false);

        try {
            jFormattedTextFieldDataLancamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldDataLancamento.setEnabled(false);
        jFormattedTextFieldDataLancamento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jButtonSair.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jButtonDeletar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDeletar.setText("Deletar");
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelCadastrarFilme2)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBuscar))
                    .addComponent(jTextFieldNome)
                    .addComponent(jTextFieldDescricao)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addComponent(jComboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldDiretor, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextFieldDataLancamento, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(jTextFieldDuracao)))
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonSave)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEdit)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDeletar)
                        .addGap(51, 51, 51)
                        .addComponent(jButtonSair)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabelCadastrarFilme2)
                .addGap(34, 34, 34)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButtonBuscar)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldDiretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedTextFieldDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jComboBoxRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jTextFieldDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonEdit)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonSair)
                    .addComponent(jButtonDeletar))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        MovieService service = new MovieServiceImpl();

        try {
            stringValidation(jTextFieldNome.getText());
            stringValidation(jTextFieldDiretor.getText());
            extracted();

            Movie request = Movie.builder()
                    .id(Long.parseLong(jTextFieldId.getText()))
                    .name(jTextFieldNome.getText())
                    .director(jTextFieldDiretor.getText())
                    .genre(Genre.valueOf(jComboBoxGenero.getSelectedItem().toString()))
                    .ratings(Rating.valueOf(jComboBoxRating.getSelectedItem().toString()))
                    .duration(Double.parseDouble(jTextFieldDuracao.getText()))
                    .releaseDate(jFormattedTextFieldDataLancamento.getText())
                    .description(jTextFieldDescricao.getText())
                    .build();

            service.update(request);
            JOptionPane.showMessageDialog(null, "Filme editado com sucesso!.");
        } catch (Exception e) {
            if (e instanceof NumberFormatException) JOptionPane.showMessageDialog(null, "A duração do filme aceita apenas números.");
            if (e instanceof PSQLException) JOptionPane.showMessageDialog(null, "Filme salvo com sucesso!.");
            else JOptionPane.showMessageDialog(null, "Erro ao editar: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        jTextFieldDiretor.setEnabled(false);
        jComboBoxGenero.setEnabled(false);
        jTextFieldDuracao.setEnabled(false);
        jComboBoxRating.setEnabled(false);
        jTextFieldNome.setEnabled(false);
        jFormattedTextFieldDataLancamento.setEnabled(false);
        jTextFieldDescricao.setEnabled(false);

        jTextFieldId.setText("");
        jTextFieldDiretor.setText("");
        jComboBoxGenero.setSelectedIndex(0);
        jTextFieldDuracao.setText("");
        jComboBoxRating.setSelectedIndex(0);
        jTextFieldNome.setText("");
        jFormattedTextFieldDataLancamento.setText("");
        jTextFieldDescricao.setText("");
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void JComboBoxGeneroChanges(Movie movie) {
        switch (movie.getGenre()) {
            case ACTION -> jComboBoxGenero.setSelectedIndex(0);
            case DRAMA -> jComboBoxGenero.setSelectedIndex(1);
            case SCIENCE_FICTION -> jComboBoxGenero.setSelectedIndex(2);
            case HORROR -> jComboBoxGenero.setSelectedIndex(3);
            case COMEDY -> jComboBoxGenero.setSelectedIndex(4);
        }
    }

    private void JComboBoxRatingsChanges(Movie movie) {
        switch (movie.getRatings()) {
            case G -> jComboBoxRating.setSelectedIndex(0);
            case PG -> jComboBoxRating.setSelectedItem(1);
            case PG13 -> jComboBoxRating.setSelectedItem(2);
            case R -> jComboBoxRating.setSelectedIndex(3);
            case NC17 -> jComboBoxRating.setSelectedIndex(4);
        }
    }


    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        MovieService service = new MovieServiceImpl();
        try {
            if (jTextFieldId.getText().isBlank()) throw new Exception("Você precisa informar o id do filme primeiro!.");

            var movie = service.getMovieById(Long.parseLong(jTextFieldId.getText()));
            jTextFieldNome.setText(movie.getName());
            jTextFieldDiretor.setText(movie.getDirector());
            jTextFieldDuracao.setText(String.valueOf(movie.getDuration()));
            jTextFieldDescricao.setText(movie.getDescription());
            jFormattedTextFieldDataLancamento.setText(movie.getReleaseDate());

            JComboBoxGeneroChanges(movie);
            JComboBoxRatingsChanges(movie);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
         try {
             if (jTextFieldNome.getText().isBlank()) throw new Exception("Você deve buscar pelo filme primeiro!.");

             jTextFieldDiretor.setEnabled(true);
             jComboBoxGenero.setEnabled(true);
             jTextFieldDuracao.setEnabled(true);
             jComboBoxRating.setEnabled(true);
             jTextFieldNome.setEnabled(true);
             jFormattedTextFieldDataLancamento.setEnabled(true);
             jTextFieldDescricao.setEnabled(true);
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        this.dispose();
        mainPage.setVisible(true);
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed
        MovieService service = new MovieServiceImpl();

        var response = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja deletar?", "deletar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_NO_OPTION) {
            try {
                service.delete(Long.parseLong(jTextFieldId.getText()));
            } catch (Exception e) {
                if (e instanceof PSQLException) JOptionPane.showMessageDialog(null, "Filme salvo com sucesso!.");
                else JOptionPane.showMessageDialog(null, "Erro ao tentar deletar: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonDeletarActionPerformed

    private static void stringValidation(String request) throws Exception {
        if (request.isEmpty()) throw new Exception("Nomes não podem estar em branco.");
        if (request.isBlank()) throw new Exception("Nomes não podem ser vazios.");
        if (request.equals("null")) throw new Exception("Nomes não podem ser nulos");
    }

    private void extracted() throws Exception {
        String[] list = jFormattedTextFieldDataLancamento.getText().split("/");
        if (list[0].equals("  ") || list[1].equals("  ") || list[2].equals("  ")) throw new Exception("Data de lançamento não pode ter campos em branco.");

        if (Integer.parseInt(list[1]) < 1 || Integer.parseInt(list[1]) > 12) throw new Exception("Mês de lançamento não pode ser menor que 01 ou maior que 12.");
        if (Integer.parseInt(list[0]) < 1 || Integer.parseInt(list[0]) > 31) throw new Exception("Dia de lançamento não pode ser menor que 01 ou maior que 31.");
        if (Integer.parseInt(list[0]) > 28 && Integer.parseInt(list[1]) == 2) throw new Exception("Fevereiro possui apenas 28 dias.");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieEditPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieEditPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieEditPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieEditPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieEditPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxGenero;
    private javax.swing.JComboBox<String> jComboBoxRating;
    private javax.swing.JFormattedTextField jFormattedTextFieldDataLancamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCadastrarFilme2;
    private javax.swing.JTextField jTextFieldDescricao;
    private javax.swing.JTextField jTextFieldDiretor;
    private javax.swing.JTextField jTextFieldDuracao;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldNome;
    private keeptoo.KGradientPanel kGradientPanel3;
    // End of variables declaration//GEN-END:variables
    private final MainPage mainPage = new MainPage();
}
